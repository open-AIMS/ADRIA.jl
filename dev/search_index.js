var documenterSearchIndex = {"docs":
[{"location":"synopsis/#Synopsis","page":"Synopsis","title":"Synopsis","text":"","category":"section"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"Climate change is transforming coral reefs. Continued climate change has scope to erode reef biodiversity, key ecosystem functions, and the ecosystem services they provide for people. Conventional management strategies remain essential but will not be sufficient on their own to sustain coral reefs in a warming and acidifying ocean. New interventions are increasingly being considered, including assisted gene flow, cooling and shading, and reef structures that provide reef habitats and substrates for enhanced recruitment.","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"Deciding where, when, and how to intervene – if at all - using new reef restoration and adaptation measures is challenging on at least three fronts.","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"are new interventions likely to create more benefits than damage? And if so, whom do they benefit, or pose risks to, and at what spatial and temporal scales?\nwhich interventions, individually and in combination, represent solutions that provide the highest return on investment for reef, people, and industries?\nwhich R&D paths and deployment strategies represent optimal solutions given multiple key objectives, trade-offs, and limited time, resources, and logistical constraints?","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"To help reef modellers, decision-support teams and reef managers address these questions, AIMS has developed the Adaptive, Dynamic Reef Intervention Algorithm (ADRIA). In short, ADRIA simulates a reef decision maker operating inside the dynamic state space of a coral reef.","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"For reef managers, ADRIA help provide line of sight to conservation solutions in complex settings where multiple objectives need to be considered. For investors, ADRIA helps analysts identify which options (R&D and/or deployment solutions) might have the highest likelihood of providing ecological and social returns on investment across a range of considered environmental conditions. While ADRIA’s key function is as a decision-support tool for intervention deployment, it uses a simple proxy model for reef coral dynamics, consisting of vital rates parameterised in a set of linked differential equations for four coral groups. The growth, mortality and recruitment of those four coral groups are further parameterised by environmental drivers and by different restoration and adaptation interventions.","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"The primary purpose of ADRIA is to help guide intervention deployment such that net benefits are maximised against primary objectives and minimised against costs. Solutions can be tuned (eventually optimised) via heuristics that control the selection of sites and/or reefs and the prioritisation of species, ecosystem services or benefits that favour what people (society) want. The key benefits considered in ADRIA are consistent with a triple-bottom-line approach, i.e.","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"ecological (e.g. biodiversity),\neconomic (e.g. tourism and fisheries values) and\nsocial and cultural (e.g. recreation and supporting identities).","category":"page"},{"location":"synopsis/","page":"Synopsis","title":"Synopsis","text":"The guiding principles for decision support in ADRIA are currently a set of dynamic Multi-Criteria Decision Analyses (dMCDA) applied at each time step. Criteria in the model are a composite of spatial environmental variables (risk from wave damage, thermal stress, and water quality) and ecological information (coral cover, substrate availability).","category":"page"},{"location":"development/development_setup/#Development-setup","page":"Development setup","title":"Development setup","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"Install Julia if not already done so, preferably using juliaup.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"There may be issues installing juliaup from the Windows Store (or otherwise undesirable). In such cases, use the alternate MSIX App installer (https://install.julialang.org/Julia.appinstaller)","category":"page"},{"location":"development/development_setup/#Recommendations","page":"Development setup","title":"Recommendations","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"It is recommended that the juliaup tool be used to ease managing Julia versions.\nWe recommend VS Code with its Julia extension when developing ADRIA.\nWe also recommend the built-in Julia REPL within VS Code be used (see the notes below).","category":"page"},{"location":"development/development_setup/#Initial-Setup","page":"Development setup","title":"Initial Setup","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"Once installed, clone the ADRIA.jl repository, navigate to the project folder, and start Julia. This only needs to be done once.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"# If not using the VS Code REPL, start julia specifying the current directory as the project environment\n# Assumes you have started the terminal in the ADRIA directory.\n$ julia --project=.\n\n# Instantiate project. Sets up project packages. Only need to do this once.\njulia> ]instantiate","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"For development purposes, set up a sandbox environment (setup only needs to be done once). The steps below assumes you are in the ADRIA.jl project folder.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"$ mkdir sandbox\n$ cd sandbox\n$ julia --project=.\n\n# Switch to the package manager (`]`)\njulia> ]\n\n# Add ADRIA.jl as a local package under development\n(sandbox) pkg> dev ../\n\n# Install additional packages for visualizations\n(sandbox) pkg> add GLMakie GeoMakie GraphMakie\n\n# Add additional debugging tools to sandbox environment\n(sandbox) pkg> add Revise Infiltrator BenchmarkTools JET\n\n# Press ctrl+c to exit the package manager","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"Development scripts/functions can then be worked on in the sandbox folder, and its sub-folders, without these polluting the ADRIA project itself.","category":"page"},{"location":"development/development_setup/#Testing","page":"Development setup","title":"Testing","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"To run tests:","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"$ julia --project=.\njulia> ]test ","category":"page"},{"location":"development/development_setup/#Code-Style","page":"Development setup","title":"Code Style","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"Follow the standard Julia style guide as much as possible.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"In most cases, simply auto-formatting the code is enough.","category":"page"},{"location":"development/development_setup/#Notes","page":"Development setup","title":"Notes","text":"","category":"section"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"The very first import of the ADRIA package will be very slow as it attempts to precompile common functions to reduce later start up time. The same applies when running ADRIA for the first time. This slow initial precompilation has to be repeated if the package is modified, but will remain \"fast\" if no changes are made.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"To ameliorate this avoid having to repeatedly restart the REPL to incorporate code changes, use the Revise package. By default, the VS Code REPL will auto-load this package.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"A custom sysimage can also be created to reduce start up times.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"VS Code now has (experimental) support for generating a custom sysimage for its REPL. The same caveats as above apply: the sysimage has to be recreated if the project specification has changed for any reason.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"It is highly recommended that this sysimage be built and used.","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"See: This guide","category":"page"},{"location":"development/development_setup/","page":"Development setup","title":"Development setup","text":"Otherwise, see the documentation here for a quick how to. Note: compilation time to create a sysimage can be upwards of 30mins and, again, has to be repeated if the project packages are updated.","category":"page"},{"location":"architecture/architecture/#ADRIA-Architecture","page":"ADRIA Architecture","title":"ADRIA Architecture","text":"","category":"section"},{"location":"development/release_guide/#Release-Guide","page":"Release Guide","title":"Release Guide","text":"","category":"section"},{"location":"development/release_guide/#Public-\"Final\"-Releases","page":"Release Guide","title":"Public \"Final\" Releases","text":"","category":"section"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Run tests locally and ensure all pass.\nEnsure all version numbers have been updated (check Project.toml file)\nSubmit PR from development branch into main and request code review/approval\nOnce PR is merged into main, go to the releases page and draft a new release\nUnder \"choose a tag\" create a new tag \"on publish\"   Note version numbers should follow Semantic Versioning\nClick the \"Generate release notes\" button (top-right of textbox).   Under \"Whats new\" add a short description of the major changes.   Explicitly note any major breaking changes (i.e., anything that results obtained with previous versions of ADRIA incompatible) DO NOT click \"Publish release\". Instead, copy the generated text\nRegister the updated package by opening a new issue with the title \"Register [version number]\"   e.g., Register v1.0\nState in the comment: @JuliaRegistrator register Paste in the generated text from step 6 (an example is shown below)","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"@JuliaRegistrator register\n\nRelease notes:\n\nPaste the generated release notes here.","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"See Julia Registrator usage notes here for more details.","category":"page"},{"location":"development/release_guide/#Development-Release","page":"Release Guide","title":"Development Release","text":"","category":"section"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Development releases provide users with the most recent \"working\" version of ADRIA and may still have some known bugs. It provides users a chance to try new features and/or provide feedback before a public release.","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Deploying a Development Release follows the same steps as \"Public\" releases, except:","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Add \"-dev.x\" to the version number.   e.g., v1.2.3-dev.1; v1.2.3-dev.2 for the second development release, etc.\nUntick \"Set as the latest release\" and tick the \"Set as a pre-release\" option.\nDO click \"Publish release\", and DO NOT trigger the JuliaRegistrator bot.","category":"page"},{"location":"development/release_guide/#Release-Candidates","page":"Release Guide","title":"Release Candidates","text":"","category":"section"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Release candidates are releases that are not yet \"final\" but are close to it. Release candidates provide a \"last chance\" opportunity for users to report bugs prior to a \"final\" release.","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Deploying a Release Candidate follows the same steps as \"Public\" releases, except:","category":"page"},{"location":"development/release_guide/","page":"Release Guide","title":"Release Guide","text":"Add \"-rc.x\" to the version number.   e.g., v1.2.3-rc.1; v1.2.3-rc.2 for the second release candidate, etc.\nUntick \"Set as the latest release\" and tick the \"Set as a pre-release\" option.\nDO click \"Publish release\", and DO NOT trigger the JuliaRegistrator bot.","category":"page"},{"location":"usage/scenario_generation/#Generating-scenarios","page":"Generating scenarios","title":"Generating scenarios","text":"","category":"section"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Typical use of ADRIA is to generate a number of scenarios by sampling from combinations of possible factors relating to environmental, intervention, and coral conditions.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"A scenario is defined as a combination of all factors (i.e., all the model inputs).","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"# Generate 128 scenarios based on available environmental data layers and model parameters\nscens = ADRIA.sample(dom, 128)","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Here, the scens variable holds a DataFrame of scenarios of shape N by D, where N is the number of scenarios (rows) and D is the number of factors (columns). Because it is a DataFrame, it can be modified after the fact.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"The Sobol' method (Sobol' 1993, 2001) is the default sampling approach. It is a deterministic low-discrepancy quasi-monte carlo sampler. Samples are described as having low discrepancy if the samples are equi-distributed, and thus guarantee an even exploration of parameter space. One limitation of the Sobol' method is that  all factors are assumed to be independent. For most factors represented in ADRIA, this assumption holds true. Specific factors relating to intervention options may conditionally co-vary however, and this dependency is introduced by adjusting the sample values a posteriori to restrict sampled values to their plausible  combinations, and to map continuous values to their expected discrete factor values (where necessary), as is in the case with categorical factors. The Sobol' scheme is therefore disrupted due to the adjustment and so a Sobol' sensitivity analysis may exhibit comparatively poor convergence. Subsequent assessment of  uncertainty and sensitivity is instead conducted with the distribution-based  PAWN method (Pianosi and Wagener 2015, 2018).","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"note: Sobol' samples\nThe convergence properties of the Sobol' sequence is only valid if the number of samples is a power of 2.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Samples for factors with non-uniform distributions are transformed to their indicated distributions using the Inverse Cumulative Distribution Function method.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Although the Sobol' method is the default, any sampler supported by the Surrogates.jl package may be used. Below is an example using Latin Hypercube sampling.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"import Surrogates.QuasiMonteCarlo: LatinHypercubeSample\n\nscens = ADRIA.sample(dom, 100, LatinHypercubeSample())","category":"page"},{"location":"usage/scenario_generation/#On-model-parameters-and-specifications","page":"Generating scenarios","title":"On model parameters and specifications","text":"","category":"section"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"The current default values can be extracted with:","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"params = ADRIA.param_table(scenario_domain)","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Again, params is a DataFrame of a single row and D factors: A single scenario with model factors set to their default values.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Running specific user-defined scenarios is as simple as modifying the DataFrame (referred to as the \"scenario specification\"). A set of scenarios may be specified  simply by extending the number of rows of the DataFrame. Details of the ADRIA  model - parameter names, the default values, and their bounds - can be extracted as well.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"# Get model specification\nmodel_spec = ADRIA.model_spec(scenario_domain)\n\n# Sometimes it is useful to export the model specification to CSV\nADRIA.model_spec(scenario_domain, \"model_spec.csv\")","category":"page"},{"location":"usage/scenario_generation/#Constrained-sampling","page":"Generating scenarios","title":"Constrained sampling","text":"","category":"section"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"At times, it is necessary to create samples while holding some model factors constant.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Although a scenario set could be modified to make specific factors constant, doing so runs the risk of creating (many) identical scenarios, thereby wasting computational effort. A more efficient approach is to modify the model specification itself to treat those factors as constants. These then get ignored for the purpose of scenario generation.","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"dom = ADRIA.load_domain()\n\n# Could keep a copy of the original model parameters/bounds\n# to reset to later.\n# orig_spec = DataFrame(dom.model)\n\n# Make the assisted adaptation factor a constant\nADRIA.fix_factor!(dom, :a_adapt)\n\n# Set the assisted adaptation factor to a given constant value\nADRIA.fix_factor!(dom, :a_adapt, 3.0)\n\n# Pass in factor names and their constant values as named arguments\n# to fix a set of factors.\nADRIA.fix_factor!(dom;\n    seed_TA=Int64(5e5),\n    seed_CA=Int64(5e5),\n    SRM=0.0,  # Never fog/shade\n    fogging=0.0,\n    a_adapt=3.0,  # only deploy +3 DHW enhanced corals\n    seed_years=5,\n    shade_years=0,\n    seed_freq=0,\n    shade_freq=0,\n    seed_year_start=3,\n    shade_year_start=3,\n    coral_cover_tol=1.0\n)","category":"page"},{"location":"usage/scenario_generation/#Sampling-counterfactuals-only","page":"Generating scenarios","title":"Sampling counterfactuals only","text":"","category":"section"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"A convenience function to create scenarios with no interventions (counterfactuals).","category":"page"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"cf_scens = ADRIA.sample_cf(dom, 1024)","category":"page"},{"location":"usage/scenario_generation/#References","page":"Generating scenarios","title":"References","text":"","category":"section"},{"location":"usage/scenario_generation/","page":"Generating scenarios","title":"Generating scenarios","text":"Sobol’, I. M. 1993. Sensitivity analysis for non-linear mathematical models. Mathematical Modelling and Computational Experiment 1:407–414. [Translated from Russian, accessible at: https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=mm&paperid=2320&option_lang=eng]\nSobol′, I. M. 2001. Global sensitivity indices for nonlinear mathematical models and their Monte Carlo estimates. Mathematics and Computers in Simulation 55:271–280. https://doi.org/10.1016/S0378-4754(00)00270-6\nPianosi, F., and T. Wagener. 2015. A simple and efficient method for global sensitivity analysis based on cumulative distribution functions. Environmental Modelling & Software 67:1–11. https://dx.doi.org/10.1016/j.envsoft.2015.01.004\nPianosi, F., and T. Wagener. 2018. Distribution-based sensitivity analysis from a generic input-output sample. Environmental Modelling & Software 108:197–207. https://dx.doi.org/10.1016/j.envsoft.2018.07.019","category":"page"},{"location":"usage/domain/#Loading-a-Domain","page":"Loading a Domain","title":"Loading a Domain","text":"","category":"section"},{"location":"usage/domain/","page":"Loading a Domain","title":"Loading a Domain","text":"ADRIA is designed to work with Domain data packages. In short, these are pre-packaged data sets that hold the all necessary data to run simulations for a given spatial domain.","category":"page"},{"location":"usage/domain/","page":"Loading a Domain","title":"Loading a Domain","text":"See Architecture for more information.","category":"page"},{"location":"usage/domain/","page":"Loading a Domain","title":"Loading a Domain","text":"A Domain may be loaded with the load_domain function. By convention we assign the Domain to dom, although this variable can be named anything.","category":"page"},{"location":"usage/domain/","page":"Loading a Domain","title":"Loading a Domain","text":"dom = ADRIA.load_domain(\"path to domain data package\")","category":"page"},{"location":"usage/scenario_runs/#Running-scenarios","page":"Running scenarios","title":"Running scenarios","text":"","category":"section"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"# Run sampled scenarios for a given RCP\nrs = ADRIA.run_scenarios(scens, dom, \"45\")\n\n# ... or repeat scenario runs across multiple RCPs\nrs = ADRIA.run_scenarios(scens, dom, [\"45\", \"60\", \"85\"])\n\n# The location of the outputs stored on disk\n@info ADRIA.store_name(rs)\n# \"Example_domain__RCPs45__2022-10-19_12_01_26_965\"\n\n@info ADRIA.store_location(rs)\n# \"[some location]/Example_domain__RCPs45__2022-10-19_12_01_26_965\"","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"The rs variable is an ResultSet object which acts as an interface to the stored results.","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"The ResultSet provides:","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"An overview of scenarios run\nAccess to results from key ADRIA metrics\nSeeding/Shading/Fogging logs\ndomain spatial data","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"print(rs)","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"note: on-disk data store\nADRIA uses an on-disk data store (in Zarr format) to reduce memory use. The primary location for these is defined in the project's config.toml file (see instructions in Getting Started).","category":"page"},{"location":"usage/scenario_runs/","page":"Running scenarios","title":"Running scenarios","text":"tip: Reloading results\nPre-existing results can also be reloaded by providing the path to the data store.rs = ADRIA.load_results(\"path to result set\")","category":"page"},{"location":"dMCDA/#Dynamic-Multi-Criteria-Decision-Analysis","page":"Dynamic Multi-Criteria Decision Analysis","title":"Dynamic Multi-Criteria Decision Analysis","text":"","category":"section"},{"location":"development/metrics/#Contributing-a-metric","page":"Contributing a metric","title":"Contributing a metric","text":"","category":"section"},{"location":"development/metrics/","page":"Contributing a metric","title":"Contributing a metric","text":"At a minimum, all metrics must define:","category":"page"},{"location":"development/metrics/","page":"Contributing a metric","title":"Contributing a metric","text":"a \"private\" function (i.e., one that starts with an underscore: _) that performs the calculation with expected arguments\na \"private\" function that accepts a ResultSet as its first argument.\na \"public\" Metric function (i.e., no underscore) with some additional metadata","category":"page"},{"location":"development/metrics/","page":"Contributing a metric","title":"Contributing a metric","text":"The Metric type allows metadata regarding the expected dimension names and unit of measure. Note that the unit of measure is optional and can be left out.","category":"page"},{"location":"development/metrics/","page":"Contributing a metric","title":"Contributing a metric","text":"Below is the implementation of the total_absolute_cover metric.","category":"page"},{"location":"development/metrics/","page":"Contributing a metric","title":"Contributing a metric","text":"function _total_absolute_cover(X::AbstractArray{<:Real}, site_area::Vector{<:Real})::AbstractArray{<:Real}\n    return dropdims(sum(X, dims=:species), dims=:species) .* site_area'\nend\nfunction _total_absolute_cover(rs::ResultSet)::AbstractArray{<:Real}\n    return rs.outcomes[:total_absolute_cover]\nend\ntotal_absolute_cover = Metric(_total_absolute_cover, (:timesteps, :sites, :scenarios), \"m²\")\n\n# Unit of measure is optional, in cases where the values are non-dimensional\n# some_example_metric = Metric(_some_example_metric, (:timesteps, :scenarios))","category":"page"},{"location":"architecture/domain_and_resultsets/#Inputs-and-Outputs","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"","category":"section"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"ADRIA seeks to use Data Packages to define a standard structure, format, and naming convention for its inputs and outputs. By definition, a Data Package is a directory holding the required data for ADRIA to run, or results from model runs.","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Data specifications are outlined/stored in this repository: https://github.com/open-AIMS/ADRIA-data-specs","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The overall structure and data formats of the data packages are illustrated in the diagram below.","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"(Image: Domain-Results Diagram)","category":"page"},{"location":"architecture/domain_and_resultsets/#Domain-data-package","page":"Inputs and Outputs","title":"Domain data package","text":"","category":"section"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Prior to running the ADRIA coral ecosystem model, the first step (after importing the package) is to load domain data.","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"dom = ADRIA.load_domain(\"path to some domain\")","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"As the naming suggests, inputs are taken to represent a given spatial area, and so are referred to as a Domain.","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The Domain data package consists of:","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Connectivity (CSVs, grouped by year)\nDegree-Heating Week trajectories (in netCDF format; dimensions: timestep ⋅ location ⋅ projection)\nWave stress (as netCDFs; dimensions: timestep ⋅ location ⋅ projection)\nGeospatial data\na datapackage.json file with machine-readable metadata\na README.md file with human-readable content","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Geospatial data consists of:","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"polygons defining individual reefs/sites in geopackage format\ninitial coral cover (as a netCDF; with dimensions: species/sizes ⋅ locations)","category":"page"},{"location":"architecture/domain_and_resultsets/#Naming-conventions","page":"Inputs and Outputs","title":"Naming conventions","text":"","category":"section"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"By convention, the directory name is typically the name of the reef or reef cluster. Where multiple datasets for the same spatial domain are expected, appending a unique suffix is recommended, such as the date of creation, such as \"Moore_2022-11-17\".","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The geopackage is expected to have the same filename as its Domain. For example, if the domain name is \"Exampledomain\", then the geopackage file should be named \"Example\\domain.gpkg\".","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Degree-heating Week datasets must follow the convention of: dhwRCP[NN].nc","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Here, [NN] is to be replaced with the two digit RCP code that indicates which RCP scenario is represented by the given data cube. The following are examples of valid/expected filenames:","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"dhwRCP26.nc\ndhwRCP34.nc\ndhwRCP45.nc\ndhwRCP60.nc\ndhwRCP70.nc\ndhwRCP85.nc","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Similarly, below are examples of valid/expected wave stress filenames:","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"wave_RCP26.nc\nwave_RCP34.nc\nwave_RCP45.nc\nwave_RCP60.nc\nwave_RCP70.nc\nwave_RCP85.nc","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Below is a diagram indicating the directory layout","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Example_domain\n│   datapackage.json\n│   README.md\n│\n├───connectivity\n│   ├───2015\n│   │       connect_matrix_2015_1.csv\n│   │       connect_matrix_2015_2.csv\n│   │       connect_matrix_2015_3.csv\n│   │\n│   ├───2016\n│   │       connect_matrix_2016_1.csv\n│   │       connect_matrix_2016_2.csv\n│   │       connect_matrix_2016_3.csv\n│   │\n│   └───2017\n│           connect_matrix_2017_1.csv\n│           connect_matrix_2017_2.csv\n│           connect_matrix_2017_3.csv\n│\n├───DHWs\n│       dhwRCP26.nc\n│       dhwRCP45.nc\n│       dhwRCP60.nc\n│       dhwRCP85.nc\n│\n├───site_data\n│       coral_cover.nc\n│       Example_domain.gpkg\n│\n└───waves\n        wave_RCP26.nc\n        wave_RCP45.nc\n        wave_RCP60.nc\n        wave_RCP85.nc","category":"page"},{"location":"architecture/domain_and_resultsets/#ResultSets","page":"Inputs and Outputs","title":"ResultSets","text":"","category":"section"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The directory holding results is also treated as a data package referred to as a ResultSet. Scenario outcomes are written out to disk as they complete to a directory located in the user-defined Output directory (see Getting started).","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The directory name follows the convention of [Domain Name]__[IDs of RCPs]__[date/time of run]. For example: Moore_2022-11-17__RCPs45_60__2023-01-01_19_00_00_000","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"The above example ResultSet indicates the \"Moore_2022-11-17\" Domain was run for RCPs 4.5 and 6.0 at precisely 7pm (i.e., 19:00:00.000, where the trailing \"000\" indicates milliseconds). Note that each \"portion\" of information is separated by a double underscore (__).","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Simulation results are stored in Zarr format. A ResultSet also holds a copy of:","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"the scenario specifications run\nthe geospatial data used\nmodel specification for the simulations run\nSummary statistics for the DHW/wave scenarios run, and\nLogs indicating which locations were intervened on","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Below is a diagram of the directory structure. Filenames are not shown here as there may be hundreds/thousands depending on the scenario set run.","category":"page"},{"location":"architecture/domain_and_resultsets/","page":"Inputs and Outputs","title":"Inputs and Outputs","text":"Example_domain__RCP45_60_85__2023-03-11_19_00_00_000\n├───env_stats\n│   ├───dhw\n│   │   ├───45\n│   │   ├───60\n│   │   └───85\n│   └───wave\n│       ├───45\n│       ├───60\n│       └───85\n├───inputs\n├───logs\n│   ├───fog\n│   ├───rankings\n│   ├───seed\n│   └───shade\n├───model_spec\n├───results\n│   ├───absolute_shelter_volume\n│   ├───relative_juveniles\n│   ├───relative_shelter_volume\n│   ├───relative_taxa_cover\n│   └───total_absolute_cover\n└───site_data","category":"page"},{"location":"usage/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"ADRIA is a decision support platform which includes decision heuristics (MCDA) with a small coral ecosystem model. The MCDA processes may be used separately.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"This section outlines how ADRIA may be used to arrive at a select range of possible pathways that are robust to possible future conditions.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"Create a directory for your project, and start Julia inside that directory:","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"$ julia --project=.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"ADRIA may be installed through the package manager or from the github repository (for the most recent development version).","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"julia> ]add ADRIA\n\n# OR, to install the latest development version:\n\njulia> ]add https://github.com/open-AIMS/ADRIA.jl.git","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"Similarly, ADRIA can be updated as new releases are made:","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"julia> ]up ADRIA","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"To setup ADRIA for development, see the Development Setup page.","category":"page"},{"location":"usage/getting_started/#Visualizations","page":"Getting Started","title":"Visualizations","text":"","category":"section"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"The Makie package ecosystem is used for producing plots. These are optional, and only necessary if visualizations are desired.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"julia> ]add GLMakie GeoMakie GraphMakie","category":"page"},{"location":"usage/getting_started/#Running-ADRIA-simulations","page":"Getting Started","title":"Running ADRIA simulations","text":"","category":"section"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"Before anything can be done, a config.toml file is needed. Create a config.toml file inside your project directory with the following content below (adjusted for your needs).","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"This config.toml file is specific to your computer and project. It should not be committed to version control.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"[operation]\nnum_cores = 2     # No. of cores to use. Values <= 0 will use all available cores.\nthreshold = 1e-8  # Result values below this will be set to 0.0 (to save disk space)\ndebug = false     # Disable multi-processing to allow error messages to be shown\n\n[results]\noutput_dir = \"./Outputs\"  # Change this to point to where you want to store results","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"tip: Performance\nADRIA uses an on-disk data store to hold results from model runs. Setting output_dir to a directory on an SSD (Solid State Drive) will maximize performance.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"Start Julia from the project directory","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"$ julia --project=.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"and import ADRIA to start.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"# Import ADRIA package\nusing ADRIA","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"Below is an example workflow. Each line is explained in the next few pages.","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ADRIA\n\n# Load a domain\ndom = ADRIA.load_domain(\"path to some domain data package\")\n\n# Generate scenarios\nscens = ADRIA.sample(128, dom)\n\n# Run sampled scenarios for a given RCP\nrs = ADRIA.run_scenarios(scens, dom, \"45\")\n\n# ... or repeat scenario runs across multiple RCPs\nrs = ADRIA.run_scenarios(scens, dom, [\"45\", \"60\", \"85\"])\n\n# Obtain metrics\ns_tac = ADRIA.metrics.scenario_tac(rs)","category":"page"},{"location":"usage/getting_started/","page":"Getting Started","title":"Getting Started","text":"See Analysis for further examples.","category":"page"},{"location":"API/#ADRIA-API","page":"ADRIA API","title":"ADRIA API","text":"","category":"section"},{"location":"API/#Metrics","page":"ADRIA API","title":"Metrics","text":"","category":"section"},{"location":"API/","page":"ADRIA API","title":"ADRIA API","text":"Modules = [ADRIA.metrics]\nOrder   = [:function, :type]\nPrivate = false","category":"page"},{"location":"API/#Performance-indicators","page":"ADRIA API","title":"Performance indicators","text":"","category":"section"},{"location":"API/","page":"ADRIA API","title":"ADRIA API","text":"Modules = [ADRIA.performance]\nOrder   = [:function, :type]","category":"page"},{"location":"API/#ADRIA.performance.RMSE-Tuple{Any, Any}","page":"ADRIA API","title":"ADRIA.performance.RMSE","text":"Root Mean Square Error\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.environmental_diversity-Tuple{Any, Any}","page":"ADRIA API","title":"ADRIA.performance.environmental_diversity","text":"environmental_diversity(ms, inputs_i)\n\nObtain an indication of environmental factor diversity for a scenario set. Higher values indicate a greater of mix of environmental conditions were experienced between scenarios.\n\nThis is referred to as E.\n\nArguments\n\nms : model spec\ninputs_i : inputs used for scenarios of interest\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.gmd-Tuple{AbstractVector{<:Real}}","page":"ADRIA API","title":"ADRIA.performance.gmd","text":"gmd(vals::AbstractVector{<:Real})::Float64\ngmd(vals::AbstractMatrix{<:Real})\n\nGini's Mean Difference.\n\nThe absolute mean of all pairwise distances between elements in a given set.\n\nReferences\n\nLa Haye, R., & Zizler, P. (2019).  The Gini mean difference and variance.  METRON, 77(1), 43-52.  https://doi.org/10.1007/s40300-019-00149-2\nYitzhaki, S. (2003).  Gini's Mean difference: A superior measure of variability for non-normal   distributions.  Metron - International Journal of Statistics, LXI(2), 285-316. https://ideas.repec.org/a/mtn/ancoec/030208.html\nKashif, M., Aslam, M., Al-Marshadi, A. H., & Jun, C.-H. (2016). Capability Indices for Non-Normal Distribution Using Gini's Mean Difference as Measure of Variability.  IEEE Access, 4, 7322-7330. https://doi.org/10.1109/ACCESS.2016.2620241\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.intervention_diversity-Tuple{Any, Any}","page":"ADRIA API","title":"ADRIA.performance.intervention_diversity","text":"intervention_diversity(ms, inputs_i)\n\nObtain an indication of intervention diversity for a scenario. Higher values indicate a greater of mix of interventions options were applied.\n\nThis is referred to as D.\n\nArguments\n\nms : model spec\ninputs_i : inputs used for scenarios of interest\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.intervention_effort-Tuple{Any, Any, Any}","page":"ADRIA API","title":"ADRIA.performance.intervention_effort","text":"intervention_effort(ms, inputs_i)\n\nObtain an indication of intervention effort for each scenario and intervention type. This is referred to as F.\n\nArguments\n\nms : model spec\ninputs_i : inputs used for scenarios of interest\n\nReturns\n\nMatrix of s * 6, where s is the number of scenarios and columns are: seed_TA, seed_CA, fogging, SRM, seed_years, shade_years\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.normalize-Tuple{AbstractArray{<:Real}}","page":"ADRIA API","title":"ADRIA.performance.normalize","text":"normalize(vals::AbstractArray{<:Real})\n\nNormalize values using feature scaling such that values are bound between 0 and 1, where 1 is equivalent to the maximum value found.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.probability-Tuple{AbstractArray{<:Real}}","page":"ADRIA API","title":"ADRIA.performance.probability","text":"probability(vals::AbstractArray{<:Real})\n\nCalculate probability of individual trajectories, given a scenario ensemble S.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.performance.temporal_variability-Tuple{AbstractVector{<:Real}}","page":"ADRIA API","title":"ADRIA.performance.temporal_variability","text":"temporal_variability(x::AbstractVector{<:Real})\ntemporal_variability(x::AbstractArray{<:Real, 2})\ntemporal_variability(x::AbstractArray{<:Real}, func_or_data...)\n\nThe V meta-metric.\n\nAs a meta-metric, it can be applied to any combination of metrics (including itself), assuming x is bound between 0 and 1. If this is not the case, consider normalizing values first.\n\nExamples\n\n# Apply V to a time series\njulia> temporal_variability(rand(50))\n\n# Apply V to an ensemble of of time series\njulia> x = rand(50, 200)\njulia> temporal_variability(x)\n\n# Create and apply a modified V metric to an ensemble of of time series.\n# Where the argument is an array and not a function, the data is used directly\n# and so it is assumed all matrices are of the same size and shape.\njulia> temporal_variability(x, temporal_variabilty, temporal_variability(P(x)))\njulia> temporal_variability(x, temporal_variabilty, P(x), D(x), E(x))\n\n\n\n\n\n","category":"method"},{"location":"API/#Sensitivity","page":"ADRIA API","title":"Sensitivity","text":"","category":"section"},{"location":"API/","page":"ADRIA API","title":"ADRIA API","text":"Modules = [ADRIA.sensitivity]\nOrder   = [:function, :type]","category":"page"},{"location":"API/#ADRIA.sensitivity.ks_statistic-Tuple{Any}","page":"ADRIA API","title":"ADRIA.sensitivity.ks_statistic","text":"ks_statistic(ks)\n\nCalculate the Kolmogorov-Smirnov test statistic.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.sensitivity.outcome_map-Union{Tuple{V}, Tuple{T}, Tuple{DataFrames.DataFrame, AbstractVecOrMat{T}, V, Vector}} where {T<:Real, V<:Union{Function, BitVector, Vector{Int64}}}","page":"ADRIA API","title":"ADRIA.sensitivity.outcome_map","text":"outcome_map(X::DataFrame, y::AbstractVecOrMat, rule, target_factors::Vector; S::Int=20, n_boot::Int=100, conf::Float64=0.95)::NamedDimsArray\n\nMap normalized outcomes (defined by rule) to factor values discretized into S bins.\n\nProduces a matrix indicating the range of (normalized) outcomes across factor space for each dimension (the model inputs). This is similar to a Regional Sensitivity Analysis, except that the model outputs are examined directly as opposed to a measure of sensitivity.\n\nNote:\n\ny is normalized on a per-column basis prior to the analysis\nEmpty areas of factor space (those that do not have any desired outcomes) will be assigned NaN\n\nArguments\n\nX : scenario specification\ny : Vector or Matrix of outcomes corresponding to scenarios in X\nrule : a callable defining a \"desirable\" scenario outcome\ntarget_factors : list of factors of interest to perform analyses on\nS : number of slices of factor space. Higher values equate to finer granularity\nn_boot : number of bootstraps (default: 100)\nconf : confidence interval (default: 0.95)\n\nReturns\n\n3-dimensional NamedDimsArray, of shape S ⋅ D ⋅ 3, where:\n\nS\nis the slices,\nD\nis the number of dimensions, with\nboostrapped mean (dim 1) and the lower/upper 95% confidence interval (dims 2 and 3).\n\nExamples\n\n# Factors of interest\nfoi = [:SRM, :fogging, :a_adapt]\n\n# Find scenarios where all metrics are above their median\nrule = y -> all(y .> 0.5)\n\n# Map input values where to their outcomes\nADRIA.sensitivity.outcome_map(X, y, rule, foi; S=20, n_boot=100, conf=0.95)\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.sensitivity.pawn-Union{Tuple{T2}, Tuple{T1}, Tuple{T1, T2, Vector{String}}} where {T1<:(AbstractArray{<:Real}), T2<:(AbstractVector{<:Real})}","page":"ADRIA API","title":"ADRIA.sensitivity.pawn","text":"pawn(X::T1, y::T2, dimnames::Vector{String}; S::Int64=10)::NamedDimsArray where {T1<:AbstractArray{<:Real},T2<:AbstractVector{<:Real}}\n\nCalculates the PAWN sensitivity index.\n\nThe PAWN method (by Pianosi and Wagener) is a moment-independent approach to Global Sensitivity Analysis. Outputs are characterized by their Cumulative Distribution Function (CDF), quantifying the variation in the output distribution after conditioning an input over \"slices\" (S) - the conditioning intervals. If both distributions coincide at all slices (i.e., the distributions are similar or identical), then the factor is deemed non-influential.\n\nThis implementation applies the Kolmogorov-Smirnov test as the distance measure and returns summary statistics (min, mean, median, max, std, and cv) over the slices.\n\nArguments\n\nX : Model inputs\ny : Model outputs\nfactor_names : Names of each factor represented by columns in X\nS : Number of slides (default: 10)\n\nReturns\n\nNamedDimsArray, of min, mean, median, max, std, and cv summary statistics.\n\nReferences\n\nPianosi, F., Wagener, T., 2018. Distribution-based sensitivity analysis from a generic input-output sample. Environmental Modelling & Software 108, 197-207. https://doi.org/10.1016/j.envsoft.2018.07.019\nBaroni, G., Francke, T., 2020. GSA-cvd Combining variance- and distribution-based global sensitivity analysis https://github.com/baronig/GSA-cvd\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.sensitivity.rsa-Tuple{DataFrames.DataFrame, AbstractVector{<:Real}}","page":"ADRIA API","title":"ADRIA.sensitivity.rsa","text":"rsa(X::DataFrame, y::Vector{<:Real}; S=10)::NamedDimsArray\nrsa(rs::ResultSet, y::AbstractArray{<:Real}; S::Int64=10)::NamedDimsArray\n\nPerform Regional Sensitivity Analysis.\n\nRegional Sensitivity Analysis is a Monte Carlo Filtering approach which aims to identify which (group of) factors drive model outputs within or outside of a specified bound. Outputs which fall inside the bounds are regarded as \"behavioral\", whereas those outside are \"non-behavioral\". The distribution of behavioral/non-behavioral subsets are compared for each factor. If the subsets are not similar, then the factor is influential. The sensitivity index is simply the maximum distance between the two distributions, with larger values indicating greater sensitivity.\n\nThe implemented approach slices factor space into S bins and iteratively assesses behavioral (samples within the bin) and non-behavioral (out of bin samples) subsets with the non-parametric k-sample Anderson-Darling test. Larger values indicate greater dissimilarity (thus, sensitivity). The Anderson-Darling test places more weight on the tails compared to the Kolmogorov-Smirnov test.\n\nRSA can indicate where in factor space model sensitivities may be, and contributes to a Value-of-Information (VoI) analysis.\n\nIncreasing the value of S increases the granularity of the analysis, but necessitates larger sample sizes.\n\nNote: Values of type missing indicate a lack of samples in the region.\n\nArguments\n\nX : scenario specification\ny : scenario outcomes\nS : number of bins to slice factor space into (default: 10)\n\nReturns\n\nNamedDimsArray, [bin values, factors]\n\nExamples\n\nADRIA.sensitivity.rsa(X, y; S=10)\n\nReferences\n\nPianosi, F., K. Beven, J. Freer, J. W. Hall, J. Rougier, D. B. Stephenson, and T. Wagener. 2016. Sensitivity analysis of environmental models: A systematic review with practical workflow. Environmental Modelling & Software 79:214-232. https://dx.doi.org/10.1016/j.envsoft.2016.02.008\nSaltelli, A., M. Ratto, T. Andres, F. Campolongo, J. Cariboni, D. Gatelli, M. Saisana, and S. Tarantola. 2008. Global Sensitivity Analysis: The Primer. Wiley, West Sussex, U.K. https://dx.doi.org/10.1002/9780470725184 Accessible at: http://www.andreasaltelli.eu/file/repository/PrimerCorrected2022.pdf\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.sensitivity.tsa-Tuple{DataFrames.DataFrame, AbstractMatrix{<:Real}}","page":"ADRIA API","title":"ADRIA.sensitivity.tsa","text":"tsa(X::DataFrame, y::AbstractMatrix)::NamedDimsArray\n\nPerform Temporal (or time-varying) Sensitivity Analysis using the PAWN sensitivity index.\n\nThe sensitivity index value for time t is inclusive of all time steps prior to t. Alternate approaches use a moving window, or only data for time t.\n\nExamples\n\nrs = ADRIA.load_results(\"a ResultSet of interest\")\n\n# Get scenario outcomes over time (shape: `time ⋅ scenarios`)\ny_tac = ADRIA.metrics.scenario_total_cover(rs)\n\n# Calculate sensitivity of outcome to factors for each time step\nADRIA.sensitivity.tsa(rs.inputs, y_tac)\n\nArguments\n\nX : Scenario specification\ny : scenario outcomes over time\n\nReturns\n\nNamedDimsArray, of shape D ⋅ 6 ⋅ T, where\n\nD\nis the number of dimensions/factors\n6 corresponds to the min, mean, median, max, std, and cv of the PAWN indices\nT\nis the number of time steps\n\n\n\n\n\n","category":"method"},{"location":"API/#General-API","page":"ADRIA API","title":"General API","text":"","category":"section"},{"location":"API/","page":"ADRIA API","title":"ADRIA API","text":"Modules = [ADRIA]\nOrder   = [:function, :type]\nPrivate = false","category":"page"},{"location":"API/#ADRIA.coral_spec-Tuple{}","page":"ADRIA API","title":"ADRIA.coral_spec","text":"coral_spec()\n\nTemplate for coral parameter values for ADRIA. Includes \"vital\" bio/ecological parameters, to be filled with sampled or user-specified values.\n\nAny parameter added to the params DataFrame defined here will automatically be made available to the ADRIA model.\n\nNotes: Values for the historical, temporal patterns of degree heating weeks between bleaching years come from [1].\n\nReturns\n\nparams : NamedTuple[taxanames, paramnames, params], taxa names, parameter          names, and parameter values for each coral taxa, group and size class\n\nReferences\n\nLough, J. M., Anderson, K. D., & Hughes, T. P. (2018).  Increasing thermal stress for tropical coral reefs: 1871-2017.  Scientific Reports, 8(1), 6079.  https://doi.org/10.1038/s41598-018-24530-9\nHall, V.R. & Hughes, T.P. 1996. Reproductive strategies of modular organisms:   comparative studies of reef-building corals. Ecology, 77: 950 - 963. https://dx.doi.org/10.2307/2265514\nBozec, Y.-M., Rowell, D., Harrison, L., Gaskell, J., Hock, K.,  Callaghan, D., Gorton, R., Kovacs, E. M., Lyons, M., Mumby, P.,  & Roelfsema, C. (2021). Baseline mapping to support reef restoration and   resilience-based management in the Whitsundays. https://doi.org/10.13140/RG.2.2.26976.20482\nBozec, Y.-M., Hock, K., Mason, R. A. B., Baird, M. E., Castro-Sanguino, C.,  Condie, S. A., Puotinen, M., Thompson, A., & Mumby, P. J. (2022). Cumulative impacts across Australia's Great Barrier Reef: A mechanistic evaluation. Ecological Monographs, 92(1), e01494. https://doi.org/10.1002/ecm.1494\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.create_coral_struct","page":"ADRIA API","title":"ADRIA.create_coral_struct","text":"create_coral_struct(bounds=(0.9, 1.1))\n\nGenerates Coral struct using the default parameter spec.\n\nExample\n\n# Define coral struct with auto-generated parameter ranges\n# (default in ADRIA is ± 10%, triangular distribution with peak at 0.5)\ncreate_coral_struct()\ncoral = Coral()\n\n# Recreate coral spec ± 50% from nominal values\ncreate_coral_struct((0.5, 1.5))\ncoral = Coral()\n\n\n\n\n\n","category":"function"},{"location":"API/#ADRIA.env_stats-Tuple{ADRIA.ResultSet, String, String}","page":"ADRIA API","title":"ADRIA.env_stats","text":"env_stats(rs::ResultSet, s_name::String, rcp::String)\nenv_stats(rs::ResultSet, s_name::String, rcp::String, scenario::Int)\nenv_stats(rs::ResultSet, s_name::String, stat::String, rcp::String, scenario::Int)\n\nExtract statistics for a given environmental layer (\"DHW\" or \"wave\")\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.growthODE-Tuple{Matrix{Float64}, Matrix{Float64}, NamedTuple, Real}","page":"ADRIA API","title":"ADRIA.growthODE","text":"growthODE(du, X, p, _)\n\nBase coral growth function.\n\nProportion of corals within a size class are modeled to transition to the next size class up. Assumes colony sizes are evenly distributed within each size bin. Transitions are a ratio of the change in colony size to the width of the bin. See coral_spec() for further detail.\n\nNote that recruitment pertains to coral groups (n = 6) and represents the contribution to the cover of the smallest size class within each group.  While growth and mortality metrics pertain to groups (6) as well as size classes (6) across all sites (total of 36 by n_sites), recruitment is a 6 by n_sites array.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.run_scenario-Tuple{Int64, Union{AbstractVector, DataFrames.DataFrameRow}, Domain, NamedTuple, NamedTuple}","page":"ADRIA API","title":"ADRIA.run_scenario","text":"run_scenario(idx::Int64, param_set::Union{AbstractVector, DataFrameRow}, domain::Domain, data_store::NamedTuple, cache::NamedTuple)::NamedTuple\nrun_scenario(idx::Int64, param_set::Union{AbstractVector, DataFrameRow}, domain::Domain, data_store::NamedTuple)::NamedTuple\nrun_scenario(param_set::Union{AbstractVector, DataFrameRow}, domain::Domain, cache::NamedTuple)::NamedTuple\nrun_scenario(param_set::NamedTuple, domain::Domain)::NamedTuple\n\nRun individual scenarios for a given domain, saving results to a Zarr data store. Results are stored in Zarr format at a pre-configured location. Sets up a new cache if not provided.\n\nNotes\n\nLogs of site ranks only store the mean site rankings over all environmental scenarios. This is to reduce the volume of data stored.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.select-Tuple{ADRIA.ResultSet, String}","page":"ADRIA API","title":"ADRIA.select","text":"select(r::ResultSet, op::String)\n\nHacky scenario filtering - to be replaced with more robust approach.\n\nOnly supports filtering by single attribute. Should be expanded to support filtering metric results too.\n\nExamples\n\nselect(result, \"guided .> 0.0\")\n\n# Above expands to:\n# result.inputs.guided .> 0.0\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.site_area-Tuple{Domain}","page":"ADRIA API","title":"ADRIA.site_area","text":"site_area(domain::Domain)::Vector{Float64}\n\nGet site area for the given domain.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.site_k_area-Tuple{Domain}","page":"ADRIA API","title":"ADRIA.site_k_area","text":"site_k_area(domain::Domain)::Vector{Float64}\n\nGet maximum coral cover area for the given domain in absolute area.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.timesteps-Tuple{ADRIA.ResultSet}","page":"ADRIA API","title":"ADRIA.timesteps","text":"timesteps(rs::ResultSet)\n\nRetrieve the time steps represented in the result set.\n\nArguments\n\nrs : ResultSet\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.timesteps-Tuple{Domain}","page":"ADRIA API","title":"ADRIA.timesteps","text":"Extract the time steps represented in the data package.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.ADRIADomain","page":"ADRIA API","title":"ADRIA.ADRIADomain","text":"ADRIADomain{M,I,D,S,V,T,X}\n\nCore ADRIA domain. Represents study area.\n\n\n\n\n\n","category":"type"},{"location":"API/#ADRIA.Domain-Tuple{String, String, String, Vector, String, String, String, String, String, String, String}","page":"ADRIA API","title":"ADRIA.Domain","text":"Domain(name::String, rcp::String, timeframe::Vector, site_data_fn::String, site_id_col::String, unique_site_id_col::String, init_coral_fn::String,\n       conn_path::String, dhw_fn::String, wave_fn::String)::Domain\n\nConvenience constructor for Domain.\n\nArguments\n\nname : Name of domain\ndpkg_path : location of data package\nrcp : RCP scenario represented\ntimeframe : Time steps represented\nsite_data_fn : File name of spatial data used\nsite_id_col : Column holding name of reef the site is associated with (non-unique)\nunique_site_id_col : Column holding unique site names/ids\ninit_coral_fn : Name of file holding initial coral cover values\nconn_path : Path to directory holding connectivity data\ndhw_fn : Filename of DHW data cube in use\nwave_fn : Filename of wave data cube\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.Domain-Union{Tuple{T}, Tuple{String, String, ADRIA.EnvLayer, AbstractMatrix{<:T}, Vector{Float64}, Vector{Float64}, Vector{Int64}, DataFrames.DataFrame, Matrix{Float64}, Float64, String, String, NamedDims.NamedDimsArray, ADRIA.CoralGrowth, Vector{String}, Vector{String}, NamedDims.NamedDimsArray, NamedDims.NamedDimsArray}} where T<:Union{Float32, Float64}","page":"ADRIA API","title":"ADRIA.Domain","text":"Barrier function to create Domain struct without specifying Intervention/Criteria/Coral/SimConstant parameters.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADRIA.SimConstants","page":"ADRIA API","title":"ADRIA.SimConstants","text":"SimConstants\n\nStruct of simulation constants for ADRIA\n\nReferences\n\nLough, J. M., Anderson, K. D., & Hughes, T. P. (2018). Increasing thermal stress for tropical coral reefs: 1871-2017. Scientific Reports, 8(1), 6079. https://doi.org/10.1038/s41598-018-24530-9\nHughes, T. P., Kerry, J. T., Baird, A. H., Connolly, S. R.,   Dietzel, A., Eakin, C. M., Heron, S. F., Hoey, A. S.,   Hoogenboom, M. O., Liu, G., McWilliam, M. J., Pears, R. J.,   Pratchett, M. S., Skirving, W. J., Stella, J. S., & Torda, G. (2018). Global warming transforms coral reef assemblages. Nature, 556(7702), 492-496. https://doi.org/10.1038/s41586-018-0041-2\nBozec, Y.-M., Rowell, D., Harrison, L., Gaskell, J., Hock, K.,   Callaghan, D., Gorton, R., Kovacs, E. M., Lyons, M., Mumby, P.,   & Roelfsema, C. (2021). Baseline mapping to support reef restoration and   resilience-based management in the Whitsundays. https://doi.org/10.13140/RG.2.2.26976.20482\nBozec, Y.-M., Hock, K., Mason, R. A. B., Baird, M. E., Castro-Sanguino, C.,   Condie, S. A., Puotinen, M., Thompson, A., & Mumby, P. J. (2022). Cumulative impacts across Australia's Great Barrier Reef: A mechanistic evaluation.  Ecological Monographs, 92(1), e01494. https://doi.org/10.1002/ecm.1494\n\n\n\n\n\n","category":"type"},{"location":"development/building_docs/#Building-Documentation","page":"Building Documentation","title":"Building Documentation","text":"","category":"section"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"ADRIA documentation is built using Documenter.jl.","category":"page"},{"location":"development/building_docs/#Building-documentation-locally","page":"Building Documentation","title":"Building documentation locally","text":"","category":"section"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"From the ADRIA project directory:","category":"page"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"$ cd docs\n$ julia --project=. make.jl","category":"page"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"Locally generated documentation can be found under docs/build. Open the index.html file with any web browser.","category":"page"},{"location":"development/building_docs/#Documentation-deployment","page":"Building Documentation","title":"Documentation deployment","text":"","category":"section"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"Documentation is hosted on GitHub Pages via GitHub Actions.","category":"page"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"Configuration is found here.","category":"page"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"Documentation is automatically built and deployed:","category":"page"},{"location":"development/building_docs/","page":"Building Documentation","title":"Building Documentation","text":"When a PR targeting main is submitted   In this case, a preview URL is created: e.g., a URL with previews/PR### at the end, where PR### refers to the PR ID.\nOn commit/merge to main   In this case the main documentation website is updated","category":"page"},{"location":"overview/#An-overview-of-ADRIA","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"","category":"section"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"ADRIA consists of three overarching components:","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"a set of Multi-Criteria Decision Analysis methods used to emulate decision-makers\na simplified coral ecology model\na suite of analysis and assessment methods","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Each component may be applied separately, or altogether to perform an end-to-end analysis. This page documents the underlying architectural implementation of ADRIA, detailing how the above components interact.","category":"page"},{"location":"overview/#General-Structure","page":"An overview of ADRIA","title":"General Structure","text":"","category":"section"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"The primary purpose of ADRIA is to support reef restoration and adaptation through the development of robust intervention strategies under deep uncertainty. Here, \"robustness\" refers to the ability of an intervention strategy to meet desired outcomes under uncertain future conditions, which themselves are unknown and may be unexpected. To do so, ADRIA employs an Exploratory Scenario Modelling framework to explore the range of possible futures and their outcomes.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Exploratory Scenario Modelling (ESM) itself leverages uncertainty and sensitivity analysis (UA/SA). Uncertainty analysis quantifies the variability of uncertainties in a given system and its expected range of outcomes. Sensitivity analysis examines the effect of a change in a model's inputs to its outputs. Common workflows to such analyses involve a three-step process (as discussed in Pianosi et al., 2016):","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Input sampling\nModel evaluation\nPost-processing","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"When ADRIA is applied in its entirety, \"input sampling\" is analogous to scenario generation: all model parameters (the inputs) are collated and are sampled through a quasi-monte carlo process and subsequently adjusted to produce plausible combinations of parameter values. The Sobol' sampling method is adopted as the default, although any method provided by the QuasiMonteCarlo.jl package can be used. Sample adjustment is required to map sampled values (which are continuous) to categorical or whole number values (e.g., Baroni and Tarantola, 2014) as may be expected by some parameters. Values are also adjusted to avoid implausible factor combinations, such as active intervention parameters in the case of non-intervention scenarios.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Model evaluation is simply running the model with the generated scenario set.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Post-processing is the analysis and visualization step.","category":"page"},{"location":"overview/#Model-Factors","page":"An overview of ADRIA","title":"Model Factors","text":"","category":"section"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Factors in ADRIA are defined across four sub-components:","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Intervention\nCriteria\nEnvironmentalLayers\nCoral","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Each sub-component is represented by a struct with fields for each parameter. The Intervention sub-component holds parameters that define a given adopted intervention strategy/option: how many (and type of) corals are to be seeded, the length of any deployment, the start/end years, and so on. The Criteria sub-component relates to the preferences for the Multi-Criteria Decision Analysis methods, further detailed in the MCDA page. For the ADRIA ecology model, EnviromentalLayers relate to the environmental scenarios available for a given simulation (a time series of DHW and Wave stress), itself determined on the loading of data (see this page).","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"The Coral sub-component relates to the coral ecosystem model, currently defined as an ecosystem of six coral \"types\": Tabular Acropora, Corymbose Acropora, Small Massives and Large Massives, as well as enhanced (e.g., via assisted adaptation or other) Tabular and Corymbose Acropora. ADRIA represents these across six size classes, with six parameters for each coral \"type\" and size class.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"These six parameters are further detailed in the Coral documentation, however, it results in 216 unique parameters (6 groups x 6 size classes x 6 parameters). Instead of specifying all 216 parameters by hand, ADRIA instead auto-generates the sub-component using a common template (see coral_spec() and create_coral_struct()). Through discussion with expert stakeholders, parameter bounds were set to +/- 10% of their default values following a triangular distribution, the peak of which is the default value.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"The ModelParameters.jl package is used to provide a simple table-like interface to model parameters. Using the Param type provided by ModelParameters.jl allows the default value, the parameter bounds, their expected distribution, and other associated metadata (e.g., a human-readable name and description) to be attached. An example from the Intervention sub-component is shown below.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"guided::N = Param(0, ptype=\"integer\", bounds=(-1, 3 + 1), dists=\"unif\",\n        name=\"Guided\", description=\"Choice of MCDA approach.\")","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Note the + 1 in the example above when specifying the upper bound. Usual sampling approaches, such as the Sobol' method mentioned above, provide a continous value. These need to be transformed to a whole number when working with categorical factors or parameters which expect a whole number. A \"flooring trick\" (as it is referred to here) is adopted to handle this transformation. The process is described in Baroni and Tarantola (2014) and is illustrated here with the example below.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Let x_i be a parameter that is expected to be a discrete value between 1 and 3 (inclusive). In other words, there are 3 valid options: x_i = 1 2 3.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"The upper bound is increased by 1, such that x_i = 1 2 3 4\nSample from this extended range with the given sampler, which returns a value 1 le v_i lt 4, where v_i in mathbbR\nTake the floor of v_i. For example, if v_i = 39, then textfloor(v_i) = 3.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"In this manner the expected probability of a possible value being selected is maintained.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"These parameter definitions are collectively known as the model specification, and can be collated as a DataFrame.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"note: Parameter Collation and Scenario Generation\nSee this page for an example how-to on collating model parameters and generating samples.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Combination of the realized parameter values then represent a \"scenario\".","category":"page"},{"location":"overview/#References","page":"An overview of ADRIA","title":"References","text":"","category":"section"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Baroni, G., and S. Tarantola. 2014. A General Probabilistic Framework for uncertainty and global sensitivity analysis of deterministic models: A hydrological case study. Environmental Modelling & Software 51:26–34.","category":"page"},{"location":"overview/","page":"An overview of ADRIA","title":"An overview of ADRIA","text":"Pianosi, F., K. Beven, J. Freer, J. W. Hall, J. Rougier, D. B. Stephenson, and T. Wagener. 2016. Sensitivity analysis of environmental models: A systematic review with practical workflow. Environmental Modelling & Software 79:214–232.","category":"page"},{"location":"usage/analysis/#Analysis","page":"Analysis","title":"Analysis","text":"","category":"section"},{"location":"usage/analysis/#Available-Metrics","page":"Analysis","title":"Available Metrics","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"A range of metrics are defined as part of the ADRIA framework.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"See the metrics page for more details.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Here, we extract results for specific metrics for each timestep and sites for all the scenarios run.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"tac = ADRIA.metrics.total_absolute_cover(rs)\nrsv = ADRIA.metrics.relative_shelter_volume(rs)\njuves = ADRIA.metrics.juveniles(rs)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Some times we're more interested in the scenario-level performance:","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"s_tac = ADRIA.metrics.scenario_tac(rs)\ns_rsv = ADRIA.metrics.scenario_rsv(rs)\ns_juves = ADRIA.metrics.scenario_juveniles(rs)","category":"page"},{"location":"usage/analysis/#Visualizations","page":"Analysis","title":"Visualizations","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"The Makie.jl ecosystem is used to produce figures.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"# Install additional packages if necessary\n# ]add GLMakie GeoMakie GraphMakie\n\n# Import additional packages and the visualization extension will compile.\nusing GLMakie, GeoMakie, GraphMakie\n# [ Info: Precompiling AvizExt [7cc86020-4844-5174-99c6-5a0a5943f024]\n\n# If using VS Code, you may need to deactivate the inline plotting feature\n# to make figures appear.\nMakie.inline!(false)\n\nusing ADRIA","category":"page"},{"location":"usage/analysis/#Scenario-outcomes","page":"Analysis","title":"Scenario outcomes","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Plots scenario trajectories.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"# First run some scenarios\n# dom = ADRIA.load_domain(\"path to domain data\")\n\n# Create some scenarios\n# num_samples = 4096\n# scens = ADRIA.sample(dom, num_samples)\n\n# Run the scenarios ...\nrs = ADRIA.run_scenarios(scens, dom, \"45\")\n# ... or load pre-existing scenarios\n# rs = ADRIA.load_results(\"path to a result set\")\n\n# Obtain data to plot (here, scenario-level metrics)\ns_tac = ADRIA.metrics.scenario_total_cover(rs)\n\n# Plot a quick scenario overview\nADRIA.viz.scenario(rs, s_tac; axis_opts=Dict(:ylabel=>\"Example Metric\"))\n\n# Can also compose a figure with subplots\ns_juves = ADRIA.metrics.scenario_relative_juveniles(rs)\n\ntf = Figure(resolution=(1600, 600))  # resolution in pixels\n\n# Implicitly create a single figure with 2 columns\nADRIA.viz.scenario!(tf[1, 1], rs, s_tac; opts=Dict(:by_RCP => false), axis_opts=Dict(:title => \"TAC [m²]\"));\nADRIA.viz.scenario!(tf[1, 2], rs, s_juves; opts=Dict(:by_RCP => false), axis_opts=Dict(:title => \"Juveniles [%]\"));\n\ntf  # display the figure\nsave(\"aviz_scenario.png\", tf)  # save the figure to a file","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: Quick scenario plots)","category":"page"},{"location":"usage/analysis/#Other-visualizations","page":"Analysis","title":"Other visualizations","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"The examples below are to illustrate usage. For further information on each method of analysis, see the documentation for the given function.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Some options shared for the plots below are defined here.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"# Some shared options for the example plots below\nfig_opts = Dict(:resolution => (1600, 800))\n\n# Factors of Interest\nopts = Dict(\n    :factors => [:RCP, :dhw_scenario, :wave_scenario, :guided, :seed_TA, :seed_CA, :fogging, :SRM, :a_adapt, :n_adapt]\n)","category":"page"},{"location":"usage/analysis/#PAWN-sensitivity-(heatmap-overview)","page":"Analysis","title":"PAWN sensitivity (heatmap overview)","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"The PAWN sensitivity analysis method is a moment-independent approach to Global Sensitivity Analysis. It is described as producing robust results at relatively low sample sizes, and is used to screen factors (i.e., identification of important factors) and rank factors as well (ordering factors by their relative contribution towards a given quantity of interest).","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"# Sensitivity (of mean scenario outcomes to factors)\nmean_s_tac = vec(mean(s_tac, dims=1))\ntac_Si = ADRIA.sensitivity.pawn(rs, mean_s_tac)\npawn_fig = ADRIA.viz.pawn(\n    tac_Si;\n    opts,\n    fig_opts\n)\nsave(\"pawn_si.png\", pawn_fig)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: PAWN sensitivity plots)","category":"page"},{"location":"usage/analysis/#Temporal-Sensitivity-Analysis","page":"Analysis","title":"Temporal Sensitivity Analysis","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Temporal (or Time-varying) Sensitivity Analysis applies sensitivity analysis to model outputs over time. The relative importance of factors and their influence on outputs over time can  then be examined through this analysis.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"tsa_s = ADRIA.sensitivity.tsa(rs, s_tac)\ntsa_fig = ADRIA.viz.tsa(\n    rs,\n    tsa_s;\n    opts,\n    fig_opts\n)\nsave(\"tsa.png\", tsa_fig)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: Plots of Temporal Sensitivities)","category":"page"},{"location":"usage/analysis/#Regional-Sensitivity-Analysis","page":"Analysis","title":"Regional Sensitivity Analysis","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"Regional Sensitivity Analysis is a monte-carlo filtering approach. The aim of RSA is to aid in identifying which (group of) factors drive model outputs and their active areas of factor space.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"tac_rs = ADRIA.sensitivity.rsa(rs, mean_s_tac; S=10)\nrsa_fig = ADRIA.viz.rsa(\n    rs,\n    tac_rs,\n    [\"n_adapt\", \"wave_scenario\", \"dhw_scenario\", \"seed_TA\", \"seed_CA\", \"fogging\", \"SRM\"];\n    opts,\n    fig_opts\n)\nsave(\"rsa.png\", rsa_fig)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: Plots of Regional Sensitivities)","category":"page"},{"location":"usage/analysis/#Outcome-mapping","page":"Analysis","title":"Outcome mapping","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"A monte-carlo filtering approach similar to Regional Sensitivity Analysis.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"As the name implies, outcome mapping aids in identifying the relationship between model outputs and the region of factor space that led to those outputs.","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"tf = Figure(resolution=(1600, 1200))  # resolution in pixels\n\n# Indicate factor values that are in the top 50 percentile\ntac_om_50 = ADRIA.sensitivity.outcome_map(rs, mean_s_tac, x -> any(x .>= 0.5); S=20)\nADRIA.viz.outcome_map!(\n    tf[1, 1],\n    rs,\n    tac_om_50,\n    [\"n_adapt\", \"wave_scenario\", \"dhw_scenario\", \"seed_TA\", \"seed_CA\", \"fogging\", \"SRM\"];\n    axis_opts=Dict(:title => \"Regions which lead to Top 50th Percentile Outcomes\", :ylabel => \"TAC [m²]\")\n)\n\n# Indicate factor values that are in the top 30 percentile\ntac_om_70 = ADRIA.sensitivity.outcome_map(rs, mean_s_tac, x -> any(x .>= 0.7); S=20)\nADRIA.viz.outcome_map!(\n    tf[2, 1],\n    rs,\n    tac_om_70,\n    [\"n_adapt\", \"wave_scenario\", \"dhw_scenario\", \"seed_TA\", \"seed_CA\", \"fogging\", \"SRM\"];\n    axis_opts=Dict(:title => \"Regions which lead to Top 30th Percentile Outcomes\", :ylabel => \"TAC [m²]\"))\n\nsave(\"outcome_map.png\", tf)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: Outcome mapping)","category":"page"},{"location":"usage/analysis/#GUI-for-high-level-exploration-(prototype-only!)","page":"Analysis","title":"GUI for high-level exploration (prototype only!)","text":"","category":"section"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"# To explore results interactively\nADRIA.viz.explore(\"path to Result Set\")\n\n# or, if the result set is already loaded: \n# ADRIA.viz.explore(rs)","category":"page"},{"location":"usage/analysis/","page":"Analysis","title":"Analysis","text":"(Image: Standalone app for data exploration)","category":"page"},{"location":"#ADRIA.jl-Documentation","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"","category":"section"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"ADRIA is a multi-criteria decision support platform for informing reef restoration and adaptation interventions.","category":"page"},{"location":"#Quick-start","page":"ADRIA.jl Documentation","title":"Quick start","text":"","category":"section"},{"location":"#Setup","page":"ADRIA.jl Documentation","title":"Setup","text":"","category":"section"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"To specify user-specific options, a config.toml file should be created with the following options (adjusted to suit your needs):","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"[operation]\nnum_cores = 2     # No. of cores to use. Values <= 0 will use all available cores.\nthreshold = 1e-8  # Result values below this will be set to 0.0 (to save disk space)\ndebug = false     # Disable multi-processing to allow error messages to be shown\n\n[results]\noutput_dir = \"./Outputs\"  # Change this to point to where you want to store results","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"tip: Performance\nADRIA uses an on-disk data store to hold results from model runs. Setting output_dir to a directory on an SSD (Solid State Drive) will maximize performance.","category":"page"},{"location":"#Usage","page":"ADRIA.jl Documentation","title":"Usage","text":"","category":"section"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"# Import ADRIA package\nusing ADRIA\n\n\n# Load data for a spatial domain\ndom = ADRIA.load_domain(\"path to domain data package\")\n\n# Generate 128 scenarios based on available environmental data layers and model parameters\nscens = ADRIA.sample(dom, 128)\n\n# Run sampled scenarios for a given RCP\nrs = ADRIA.run_scenarios(scens, dom, \"45\")\n\n# ... or repeatedly run scenarios across several RCPs\nrs = ADRIA.run_scenarios(scens, dom, [\"45\", \"60\", \"85\"])\n\n# then extract metrics for analysis\ntac = ADRIA.metrics.total_absolute_cover(rs)","category":"page"},{"location":"#Troubleshooting-F.A.Q","page":"ADRIA.jl Documentation","title":"Troubleshooting F.A.Q","text":"","category":"section"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"ADRIA.jl is under active development and from time to time issues may arise. Here are some answers to some issues encountered.","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"Q. I get this warning when trying to load pre-existing results:   Results were produced with a different version of ADRIA (v0.x.x). The installed version of ADRIA is: v0.y.y. Errors may occur when analyzing data.    (where x and y are different numbers).","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"A. The result set being loaded were generated by a different version of ADRIA, and in a possibly incompatible format.   Sometimes, results may still be produced/analyzed as normal. In other times, ADRIA.jl or the expected metadata in the result set may have changed   leading to errors when conducting analyses.","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"Either go back to the version indicated, or re-run the scenarios to obtain results in the updated format.","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"Q. I get an error or warning about an ENV variable not being found or set.","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"A. Double check the configuration settings in config.toml (see above).","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"Q. How do I run my own scenarios?","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"A. Scenarios are defined in a CSV file (with parameter values in columns, so that each row defines a scenario).","category":"page"},{"location":"","page":"ADRIA.jl Documentation","title":"ADRIA.jl Documentation","text":"See the example_scenarios.csv file in the examples directory for an idea of what this looks like.\nSee parameters.jl file in the examples directory on how to extract the model specification and parameter table for a given domain.\nSee also the running_scenarios.jl example script which showcases how to run such a file for a given study area.","category":"page"},{"location":"usage/scenario_discovery/#Scenario-Discovery","page":"Scenario Discovery","title":"Scenario Discovery","text":"","category":"section"},{"location":"usage/scenario_discovery/","page":"Scenario Discovery","title":"Scenario Discovery","text":"using ADRIA\n\ndom = ADRIA.load_domain(\"...\")\nscens = ADRIA.sample(dom, 4096)\n\nrs = ADRIA.run_scenarios(scens, dom, \"45\")\n# rs = ADRIA.load_results(\"...\")\n\n# Calculate representative statistic for all metrics of interest\n# Here, total cover, shelter volume and juvenile population\ntac = ADRIA.metrics.scenario_total_cover(rs)\nmean_tac = vec(mean(tac, dims=1))\n\nrsv = ADRIA.metrics.scenario_rsv(rs)\nmean_sv = vec(mean(rsv, dims=1))\n\nr_juves = ADRIA.metrics.scenario_relative_juveniles(rs)\nmean_juves = vec(mean(r_juves, dims=1))\n\n# Create matrix of all metrics\ny = hcat(mean_tac, mean_sv, mean_juves)\n\n# Define \"robust scenario\" as one where all metric outcomes >= 30th percentile.\nrule_func = x -> all(x .>= 0.3)\n\n# Identify robust scenarios for a specific RCP (4.5)\nrobust = ADRIA.analysis.find_robust(rs, y, rule_func, [45])\n\n# Output robust scenario IDs\n@info robust.RCP45\n\n# Could qualitatively examine inputs that led to robust scenarios ...\nrs.inputs[robust.RCP45, :]\n\n# ... or mark behavioural and non-behavioural outcomes for further analysis\n# e.g., with random forest.\nbehave = zeros(size(y, 1))\nbehave[robust.RCP45] .= 1.0\n\n# Next step is to test these for robustness across environmental conditions ...\n# [TODO]","category":"page"}]
}
